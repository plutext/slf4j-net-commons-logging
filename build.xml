<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="slf4j-net-commons-logging">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../eclipse-jee-indigo-SR1-win32-x86_64/eclipse"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    
	<property name="dist" value="./dist"/>
	
	<property name="slf4j-version" value="1.7.5"/>    
	<property name="ncl-version" value="${slf4j-version}.4"/>    
	
    <!--.NET properties -->
    <property name="ikvm.dir" value="/Java/ikvm/ikvm-8.1.5717.0"/>
    <property name="ikvmc" value="${ikvm.dir}/bin/ikvmc.exe"/>
    
    <path id="slf4j-net-commons-logging.classpath">
        <pathelement location="bin"/>
        <pathelement location="lib/java/Common.Logging.jar"/>
        <pathelement location="lib/java/mscorlib.jar"/>
        <pathelement location="lib/java/slf4j-api-${slf4j-version}.jar"/>
        </path>

    <target name="dist"  depends="clean, build-project" >
				
        <mkdir dir="${dist}"/>
				
		<jar destfile="${dist}/slf4j-NetCommonLogging-${ncl-version}.jar" basedir="./bin"/>		
					
    </target>     
    
    <target name="checkForIKVM">
        <condition property="IKVMAvailable">
            <and>
                <os family="windows"/>
                <available file="${ikvmc}" property="ignored" />
            </and>
        </condition>
    </target>

    <target name="dist.NET" depends="checkForIKVM,dist" if="IKVMAvailable" 
        description="Build the .NET DLL files">
        
        <!--  Note 2014 12 03:  added snk, so I could copy strong named DLLs 
              into docx4j VSTO project (which needs them for publication).              
              2017 01 22:  keep snk even for nuget.  Makes things simpler. -->

		<echo/>
        <echo>Building slf4j-api DLL..</echo>
		<echo/>
        <exec executable="${ikvmc}">
            <arg value="-out:dotNET/lib/net35/slf4j-api.dll" /> 
            
            <arg value="-keyfile:Plutext.snk" />
            <arg value="-version:${slf4j-version}.4" />
            <arg value="-target:library" />
            <arg line="lib/java/slf4j-api-${slf4j-version}.jar" />
        </exec>    

		<echo/>
        <echo>Building slf4j-NetCommonLogging DLL..</echo>
		<echo/>
        <exec executable="${ikvmc}">
            <arg value="-out:dotNET/lib/net35/slf4j-NetCommonLogging.dll" />
            
<!--             
            <arg value="-nostdlib" />
            <arg value="-lib:\windows\microsoft.net\framework64\v4.0.30319" />
            <arg value="-r:mscorlib.dll" />            
 -->
 
            <arg value="-keyfile:Plutext.snk" />
            <arg value="-version:${ncl-version}" />
            <arg value="-reference:lib/dotNET/old/Common.Logging.dll" />
          
<!-- Do not use Common.Logging.3.3; see https://sourceforge.net/p/ikvm/mailman/message/35620446/
     Swapping the order does work, but there is still a warning IKVMC0114: Emitted java.lang.IncompatibleClassChangeError

            <arg value="-reference:lib/dotNET/packages/Common.Logging.Core.3.3.1/lib/net35/Common.Logging.Core.dll" />
            <arg value="-reference:lib/dotNET/packages/Common.Logging.3.3.1/lib/net35/Common.Logging.dll" />
             -->
            <arg value="-reference:dotNET/lib/net35/slf4j-api.dll" />
            <arg value="-target:library" />
            <arg line="${dist}/slf4j-NetCommonLogging-${ncl-version}.jar" />
        </exec>
								
    </target>     
    
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/main/java">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <classpath refid="slf4j-net-commons-logging.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>    
    
</project>
